;
; AssemblerApplication5.asm
;
; Created: 2/06/2016 13:15:07
; Author : adrian
;


; Replace with your application code





.include "m2560def.inc"
.org 0x0000
    RJMP setup
.org 0x0072
setup: ldi R16, 0b11111111
       STS DDRK,R16				; PUERTO CONFIGURACION DATOS SALIDA
	   LDI R17, HIGH(RAMEND)	; CONFIGURAR EL STACK
	   OUT SPH,R17				; COPIAR EL CONTENIDO DE R17 EN SPH (REGISTRO QUE GUARDA PARTE DEL STACK POINTER)
	   LDI R17,LOW(RAMEND)		; CONFIGURAR EL STACK
	   LDI R16,0b00000001		; CARGA EL VALOR EN EL REGISTRO R16

	   
LoopIzquierda:
	CALL LoopRol
	CALL LoopRor
	rjmp LoopIzquierda

LoopDelay:
	LDI R22,1					 ; CARGA EL VALOR 60 EN EL REGISTRO R22
	repeat3:
			DEC R22				; DECREMENTA EL CONTENIDO DE R22 EN UNO
			LDI R21,0xFF		; CARGA EL VALOR 255 EN EL REGISTRO R21
	repeat2:
			DEC R21				; DECREMENTA EL CONTENIDO DE R21 EN UNO
			LDI R20,0xff		; CARGA EL VALOR 255 EN EL REGISTRO R20
	repeat1:
			DEC R20				; DECREMENTA EL CONTENIDO DE R20 EN UNO
			CPI R20,0			; COMPARA EL CONTENIDO DE R20 CON 0
			BRNE repeat1		; REPITE EL BUCLE REPEAT1 HASTA QUE R20 CONTIENE EL VALOR 0;

			CPI R21,0			; COMPARA EL CONTENIDO DE R21 CON 0
			BRNE repeat2		; REPITE EL BUCLE REPEAT2 HASTA QUE R21 CONTIENE EL VALOR 0;

			CPI R22,0			;	COMPARA EL CONTENIDO DE R22 CON 0
			BRNE repeat3		; REPITE EL BUCLE REPEAT3 HASTA QUE R22 CONTIENE EL VALOR 0;
			RET					; QUITA LA ULTIMA DIRECCION DE MEMORIA DEL STACK

loopRol:	
			LDI R23,7			; CARGA EL VALOR 255 EN EL REGISTRO R21
loopRolL:	sts PORTK,R16		; COGER REGISTRO16 Y LO COPIA AL PUERTOB7
			CALL loopDelay		; AÑADE LA DIRECCION DE LOOPDELAY AL STACK
			rol R16
			DEC R23				; DECREMENTA EL CONTENIDO DE R21 EN UNO
			CPI R23,0			; COMPARA EL CONTENIDO DE R22 CON 0
			BRNE loopRolL
			RET

loopRor:	
			LDI R23,7			; CARGA EL VALOR 255 EN EL REGISTRO R21
loopRorL:	sts PORTK,R16		; COGER REGISTRO16 Y LO COPIA AL PUERTOB7
			CALL loopDelay		; AÑADE LA DIRECCION DE LOOPDELAY AL STACK
			ror R16
			DEC R23				; DECREMENTA EL CONTENIDO DE R23 EN UNO
			CPI R23,0			; COMPARA EL CONTENIDO DE R23 CON 0
			BRNE loopRorL
			RET

.exit
